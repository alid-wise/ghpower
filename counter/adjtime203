#!/usr/bin/perl -w
use strict;
$| = 1;

#       Redistribution and use in source and binary forms, with or without
#       modification, are permitted provided that the following conditions are
#       met:
#       
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above
#         copyright notice, this list of conditions and the following disclaimer
#         in the documentation and/or other materials provided with the
#         distribution.
#       * Neither the name of the  nor the names of its
#         contributors may be used to endorse or promote products derived from
#         this software without specific prior written permission.
#       
#       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#       A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#       OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#       SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#       LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#       DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#       THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#       OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#	Copyright (C) 2008-2017 Aleksandr Deviatkin aka alid

#
# Корректировка часов счетчика Меркурий-203.2Т
# 2009-03-25 alid
# 2011-08-02 alid
# 2017-02-05 Mercury203.pm

use lib "$ENV{MY}/lib";
use Mercury203;
use GHPowerUtils;

my (@args, %opts);
foreach(@ARGV){
   if(/^\-(\S)(.*)/){	$opts{$1} = $2;	} else {	push @args, $_;	}
}
my ($addr, $device, $flag) = (@args);
die "Usage: $0 addr serial-dev"	unless(defined $addr && $device);

my $verb = exists $opts{v};
my $set = exists $opts{F};
my $diff = exists $opts{d};	# Ошибка часов
my $retries = (exists $opts{r}) ? $opts{r} : 10;

#my $addr = sprintf("%08x",$saddr);
#$addr =~ s/(\w\w)(\w\w)(\w\w)(\w\w)/$1 $2 $3 $4/;
print "Addr: [$addr]\n"	if $verb;

my ($status,$cnt,@data);
my $unit = Mercury203->new($device,$addr,'','',$retries,$verb);

if($verb) {
	print "Connection testing ... "	if $verb;
	$status = $unit->tst();
	print "$status\n"	if $verb;
	unless($status=~/ok/) {
		$unit->quit();
		die	"[$addr] Connection failed: [$status]";
	}
}

my ($ss,$mm,$hh,$md,$mon,$ye,$wd) = (localtime(time()))[0,1,2,3,4,5,6];
$ye += 1900;
$mon++;
($ss,$mm,$hh,$mon,$md,$wd) = map {sprintf("%02d",$_)} ($ss,$mm,$hh,$mon,$md,$wd);

if($set) {
	print "Time-date correction: $wd $ye-$mon-$md $hh:$mm:$ss\n"	if($verb);
	my $status = $unit->set_time($ye,$mon,$md,$wd,$hh,$mm,$ss);
	die "[$addr] request failed: [$status]"	unless($status=~/ok/);

	if(defined $flag) {	#	 автоматический переход на летнее время
		print "Set flag: $flag\n"	if($verb);
		my $status = $unit->set_time_flag($flag);
		unless($status=~/ok/) {
			$unit->quit();
			die "[$addr] request failed: [$status]";
		}
	}
}
elsif($diff) {
	my $res = $unit->get_time();
	print "$res\n"  if $verb;
	my ($dt) = ($res =~ m/(\d{4}\-\d{2}\-\d{2}\s+\d{2}\:\d{2}\:\d{2})/);
	my $stime = UTime("$dt");
	my $delta = $stime - time();
	print "[$addr] $delta\n";
} else {
	print $unit->get_time()."\n";
}
$unit->quit();

