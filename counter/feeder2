#!/usr/local/bin/perl

#
#       Copyright (C) 2008-2012 Александр Девяткин, "Зелёная горка"
#
#       Разрешается повторное распространение и использование как в виде исходного
#       кода, так и в двоичной форме, с изменениями или без, при соблюдении следующих
#       условий:
#
#       * При повторном распространении исходного кода должно оставаться указанное
#         выше уведомление об авторском праве, этот список условий и последующий
#         отказ от гарантий.
#       * При повторном распространении двоичного кода должна сохраняться указанная
#         выше информация об авторском праве, этот список условий и последующий отказ
#         от гарантий в документации и/или в других материалах, поставляемых при
#         распространении.
#       * Ни название "Зелёная горка", ни имена ее сотрудников не могут быть
#         использованы в качестве поддержки или продвижения продуктов, основанных
#         на этом ПО без предварительного письменного разрешения.
#
#       ЭТА ПРОГРАММА ПРЕДОСТАВЛЕНА ВЛАДЕЛЬЦАМИ АВТОРСКИХ ПРАВ И/ИЛИ ДРУГИМИ СТОРОНАМИ
#	"КАК ОНА ЕСТЬ" БЕЗ КАКОГО-ЛИБО ВИДА ГАРАНТИЙ, ВЫРАЖЕННЫХ ЯВНО ИЛИ ПОДРАЗУМЕВАЕМЫХ,
#	ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ЦЕННОСТИ
#	И ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. НИ В КОЕМ СЛУЧАЕ, ЕСЛИ НЕ ТРЕБУЕТСЯ
#	СООТВЕТСТВУЮЩИМ ЗАКОНОМ, ИЛИ НЕ УСТАНОВЛЕНО В УСТНОЙ ФОРМЕ, НИ ОДИН ВЛАДЕЛЕЦ
#	АВТОРСКИХ ПРАВ И НИ ОДНО ДРУГОЕ ЛИЦО, КОТОРОЕ МОЖЕТ ИЗМЕНЯТЬ И/ИЛИ ПОВТОРНО
#	РАСПРОСТРАНЯТЬ ПРОГРАММУ, КАК БЫЛО СКАЗАНО ВЫШЕ, НЕ НЕСЁТ ОТВЕТСТВЕННОСТИ,
#	ВКЛЮЧАЯ ЛЮБЫЕ ОБЩИЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ ИЛИ ПОСЛЕДОВАВШИЕ УБЫТКИ,
#	ВСЛЕДСТВИЕ ИСПОЛЬЗОВАНИЯ ИЛИ НЕВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ (ВКЛЮЧАЯ,
#	НО НЕ ОГРАНИЧИВАЯСЬ ПОТЕРЕЙ ДАННЫХ, ИЛИ ДАННЫМИ, СТАВШИМИ НЕПРАВИЛЬНЫМИ, ИЛИ
#	ПОТЕРЯМИ ПРИНЕСЕННЫМИ ИЗ-ЗА ВАС ИЛИ ТРЕТЬИХ ЛИЦ, ИЛИ ОТКАЗОМ ПРОГРАММЫ РАБОТАТЬ
#	СОВМЕСТНО С ДРУГИМИ ПРОГРАММАМИ), ДАЖЕ ЕСЛИ ТАКОЙ ВЛАДЕЛЕЦ ИЛИ ДРУГОЕ ЛИЦО БЫЛИ
#	ИЗВЕЩЕНЫ О ВОЗМОЖНОСТИ ТАКИХ УБЫТКОВ.
#

#       Copyright (C) 2008-2012 Aleksandr Deviatkin, "Green Hill"
#
#       Redistribution and use in source and binary forms, with or without
#       modification, are permitted provided that the following conditions are
#       met:
#       
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above
#         copyright notice, this list of conditions and the following disclaimer
#         in the documentation and/or other materials provided with the
#         distribution.
#       * Neither the name of the Green Hill nor the names of its
#         contributors may be used to endorse or promote products derived from
#         this software without specific prior written permission.
#       
#       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#       A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#       OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#       SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#       LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#       DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#       THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#       OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#


$|=1;
use DBI;
use Time::Local;
use utf8;
use open qw(:std :utf8);
use strict;
use lib "$ENV{MY}/lib/";
use GHPowerUtils;
use GHPower;

#
# Рассылка по подписке клиентам текущей информации о долгах по взносам
# 2016-11-15 alid
#

my (@args, %opts);
foreach(@ARGV){
	if(/^\-(\S)(\S*)/) { $opts{$1} = $2; } else {  push @args, $_; }
}
my $verb = exists $opts{v};
my $template_id = $opts{T};	# Шаблон из базы
#my $sms = exists $opts{s};
my $pgport = 5432;
my $database = $opts{D} || 'ghpower';
my $trigger = $opts{t};		# проверять триггер
# 2018-02-11
if($trigger) {	# Запуск по триггеру
	unless(-e $trigger) {	# триггер не установлен
		print "Trigger not set: $trigger\n"	if($verb);
		exit(0);
	}
	unlink $trigger;
}
# 2018-05-16 Возможность задержки отправки очередного сообщения (если есть ограничения у используемого почтового сервера)
#my $delay = $opts{L} || 0;

# Шаблон сообщения (если не используется шабон из базы)
my $SUBJ = '"GHPOWER": членские взносы';
my $BODY = <<ATEXT;
Участок: {ADDR}
Долги по взносам на {DATE}г.

{TABLE}

Всего долг: {BALANCE} руб.
Последний платеж был: {LDATE}
Оплата электроэнергии в данный расчёт не входит. 
-------------------------------
При оплате через банк сведения о произведённом платеже учитываются бухгалтером в ближайший приёмный день на основании банковской выписки. 
Сведения из банка поступают с некоторой задержкой. Поэтому возможно, что ваш платеж еще не учтен по чисто техническим причинам.
Не волнуйтесь, звонить никуда не надо. В приемный день ваш платёж отобразится в балансе.

Сообщение сформировано автоматически, отвечать на него не нужно.
ATEXT

my $dbh = DBI->connect("dbi:Pg:dbname=$database;port=$pgport","","", { RaiseError => 1, AutoCommit => 1});
# 2018-12-14 Шаблон сообщения из базы
if($template_id) {
	my $sth = $dbh->prepare("SELECT subj,body FROM feeds_template WHERE id=?");
	$sth->execute($template_id);
	my ($subj, $body) = $sth->fetchrow_array;
	$sth->finish;
	die "Bad template: $template_id"	unless(defined $subj && defined $body);
	($SUBJ, $BODY) = ($subj, $body);
}
my $ghpower = GHPower->new($dbh);
my $List = $ghpower->Domains_Struct;
my $sth = $dbh->prepare("SELECT A.id,A.b_tariff_id,B.edate,A.amount AS p_amount,A.status,A.debt,A.memo,A.modtime, B.name,B.amount,B.type,case when A.debt>0 AND now()>B.edate then 1 else 0 end AS flag FROM b_credit A INNER JOIN b_tariff B ON A.b_tariff_id=B.id WHERE A.parcel_id=? ORDER BY B.edate DESC,A.modtime DESC");
my $sth2 = $dbh->prepare("select max(pdate) from b_pays where parcel_id=?");
my $log = $dbh->prepare("INSERT INTO feed_log (id,auth,cid,dn,target,msg,status,err,posted,parts,cost) VALUES (?,?,?,?,?,?,?,?,now(),?,?)");
my $seq = $dbh->prepare("SELECT nextval('feed_log_id_seq'::regclass)");

foreach my $street (keys %$List) {
	my $Dom = $List->{$street};
	foreach my $house (keys %{$Dom}) {
		next unless($Dom->{$house}->{maillist});
		my $P = $Dom->{$house};
		my $addr = "$street, $house";
		my $status = 1;	# 0-ok, 1-отправлено, 2 - нет адреса (target)
		my $err = '';
		my ($subj,$body);
		my @emails = $ghpower->get_Domain_subscr_emails($P->{id});

		# Есть куда слать :)
		my $outnum = '';
		if(@emails) {
			$subj = $SUBJ;
			$body = $BODY;
			my $date = Now(); $date =~ s/\d{2}:\d{2}:\d{2}//;
			$body =~ s/{DATE}/$date/;
			$body =~ s/{ADDR}/$addr/;

			# Начисления
			my $Data;
			my ($debt,$debtb) = (0,0);
			$sth->execute($P->{dn});
			while(my $r = $sth->fetchrow_hashref) {
				push @$Data, $r;
				$debt += $r->{debt};
				$debtb += $r->{debt}	if($r->{flag});
			}
			$sth->finish;
			$debtb = sprintf("%0.2f", $debtb);
			$body =~ s/{BALANCE}/$debtb/;

			$sth2->execute($P->{dn});
			my ($ldate) = $sth2->fetchrow_array;
			$sth2->finish;
			$ldate = Now(UTime($ldate))	if($ldate);
			$ldate =~ s/\d{2}:\d{2}:\d{2}//;
			$ldate = $ldate."г."	if($ldate);
			$body =~ s/{LDATE}/$ldate/;

			my $table;
			foreach my $cred (@$Data) {
				next unless($cred->{flag});	# еще не долг
				$table .= sprintf("%0.2f", $cred->{debt})." руб. - ";
				$table .= $cred->{name}."\n\n";
			}

			$body =~ s/{TABLE}/$table/;
			# 2018-12-14 Уникальный номер сообщения
			$seq->execute();
			($outnum) = $seq->fetchrow_array;
			$seq->finish;
			$body =~ s/\{OUTNUM\}/$outnum/;
			#
			$body =~ s/{.*}//g;	# Удалить все неиспользованные поля шаблона

			if($verb) {
				print join(",",@emails)."\n";
				print "Subj: $subj\n";
				print "Body: $body\n";
				print "In fact a message was not sent (verbose mode).\n";
			} else {	# вот тут письмо и отправим
				GHPowerUtils::SendMail_queue($dbh,"GHPower",join(",",@emails),$subj,$body,{charset=>'utf8'});
#				SendMail("GHPower",join(",",@emails),$subj,$body,{charset=>'utf8'});
#				sleep($delay);
			}
		} else {
			# Не удалось найти адреса
			if($verb) {
				print "Unable to find any e-mail addresses\n";
			}
			# Сообщение об ошибке - в лог
			print STDERR "Unable to find any e-mail addresses: $addr\n";
			$status = 2;
		}
		$log->execute($outnum,0,0,$P->{dn},join(",",@emails),"$subj\n$body",$status,$err,1,0)	unless($verb);
	}
}
$dbh->disconnect;

