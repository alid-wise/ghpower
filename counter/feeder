#!/usr/local/bin/perl

#
#       Copyright (C) 2008-2012 Александр Девяткин, "Зелёная горка"
#
#       Разрешается повторное распространение и использование как в виде исходного
#       кода, так и в двоичной форме, с изменениями или без, при соблюдении следующих
#       условий:
#
#       * При повторном распространении исходного кода должно оставаться указанное
#         выше уведомление об авторском праве, этот список условий и последующий
#         отказ от гарантий.
#       * При повторном распространении двоичного кода должна сохраняться указанная
#         выше информация об авторском праве, этот список условий и последующий отказ
#         от гарантий в документации и/или в других материалах, поставляемых при
#         распространении.
#       * Ни название "Зелёная горка", ни имена ее сотрудников не могут быть
#         использованы в качестве поддержки или продвижения продуктов, основанных
#         на этом ПО без предварительного письменного разрешения.
#
#       ЭТА ПРОГРАММА ПРЕДОСТАВЛЕНА ВЛАДЕЛЬЦАМИ АВТОРСКИХ ПРАВ И/ИЛИ ДРУГИМИ СТОРОНАМИ
#	"КАК ОНА ЕСТЬ" БЕЗ КАКОГО-ЛИБО ВИДА ГАРАНТИЙ, ВЫРАЖЕННЫХ ЯВНО ИЛИ ПОДРАЗУМЕВАЕМЫХ,
#	ВКЛЮЧАЯ, НО НЕ ОГРАНИЧИВАЯСЬ ИМИ, ПОДРАЗУМЕВАЕМЫЕ ГАРАНТИИ КОММЕРЧЕСКОЙ ЦЕННОСТИ
#	И ПРИГОДНОСТИ ДЛЯ КОНКРЕТНОЙ ЦЕЛИ. НИ В КОЕМ СЛУЧАЕ, ЕСЛИ НЕ ТРЕБУЕТСЯ
#	СООТВЕТСТВУЮЩИМ ЗАКОНОМ, ИЛИ НЕ УСТАНОВЛЕНО В УСТНОЙ ФОРМЕ, НИ ОДИН ВЛАДЕЛЕЦ
#	АВТОРСКИХ ПРАВ И НИ ОДНО ДРУГОЕ ЛИЦО, КОТОРОЕ МОЖЕТ ИЗМЕНЯТЬ И/ИЛИ ПОВТОРНО
#	РАСПРОСТРАНЯТЬ ПРОГРАММУ, КАК БЫЛО СКАЗАНО ВЫШЕ, НЕ НЕСЁТ ОТВЕТСТВЕННОСТИ,
#	ВКЛЮЧАЯ ЛЮБЫЕ ОБЩИЕ, СЛУЧАЙНЫЕ, СПЕЦИАЛЬНЫЕ ИЛИ ПОСЛЕДОВАВШИЕ УБЫТКИ,
#	ВСЛЕДСТВИЕ ИСПОЛЬЗОВАНИЯ ИЛИ НЕВОЗМОЖНОСТИ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ (ВКЛЮЧАЯ,
#	НО НЕ ОГРАНИЧИВАЯСЬ ПОТЕРЕЙ ДАННЫХ, ИЛИ ДАННЫМИ, СТАВШИМИ НЕПРАВИЛЬНЫМИ, ИЛИ
#	ПОТЕРЯМИ ПРИНЕСЕННЫМИ ИЗ-ЗА ВАС ИЛИ ТРЕТЬИХ ЛИЦ, ИЛИ ОТКАЗОМ ПРОГРАММЫ РАБОТАТЬ
#	СОВМЕСТНО С ДРУГИМИ ПРОГРАММАМИ), ДАЖЕ ЕСЛИ ТАКОЙ ВЛАДЕЛЕЦ ИЛИ ДРУГОЕ ЛИЦО БЫЛИ
#	ИЗВЕЩЕНЫ О ВОЗМОЖНОСТИ ТАКИХ УБЫТКОВ.
#

#       Copyright (C) 2008-2012 Aleksandr Deviatkin, "Green Hill"
#
#       Redistribution and use in source and binary forms, with or without
#       modification, are permitted provided that the following conditions are
#       met:
#       
#       * Redistributions of source code must retain the above copyright
#         notice, this list of conditions and the following disclaimer.
#       * Redistributions in binary form must reproduce the above
#         copyright notice, this list of conditions and the following disclaimer
#         in the documentation and/or other materials provided with the
#         distribution.
#       * Neither the name of the Green Hill nor the names of its
#         contributors may be used to endorse or promote products derived from
#         this software without specific prior written permission.
#       
#       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#       "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
#       A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
#       OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#       SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#       LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#       DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#       THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#       (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#       OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#


$|=1;
use DBI;
use Time::Local;
use utf8;
use open qw(:std :utf8);
use strict;
use lib "$ENV{MY}/lib/";
use GHPowerUtils;
use GHPower;

#
# Рассылка по подписке клиентам текущей информации о показаниях счетчиков и балансе
# 2015-12-28 alid
#

my (@args, %opts);
foreach(@ARGV){
	if(/^\-(\S)(\S*)/) { $opts{$1} = $2; } else {  push @args, $_; }
}
my ($BALANCE_ALERT) = (@args);
# Порог для ALERT
$BALANCE_ALERT ||= 100;

#die "Usage: $0 database [-sms]"		unless($database);
my $verb = exists $opts{v};
my $sms = exists $opts{s};
my $pgport = 5432;
my $database = $opts{D} || 'ghpower';
my $cid = $opts{c} || 0;	# только для этого счетчика

# Шаблон сообщения
my $SUBJ = '"Зеленая горка": показания счетчика';
my $BODY = <<ATEXT;
Участок: {ADDR}
Показания счетчика электроэнергии на {DATE}
Дневной тариф (Т1): {T1}\n
Ночной тариф (Т2): {T2}

Баланс: {BALANCE} руб.
 
{WARN}
-------------------------------
Счетчик No: {SN} {KTRANS}

Действующий тариф: {TARIFF}

При оплате через банк сведения о произведённом платеже учитываются бухгалтером в ближайший приёмный день на основании банковской выписки. 
Сведения из банка поступают с некоторой задержкой. Поэтому возможно, что ваш платеж еще не учтен по чисто техническим причинам.
Не волнуйтесь, звонить никуда не надо. В приемный день ваш платёж отобразится в балансе.

Сообщение сформировано автоматически, отвечать на него не нужно.
ATEXT

my $WARN = <<AWARN;
Внимание: баланс отрицательный. {ALERT}
AWARN
my $ALERT = 'У вас большой долг за электричество.';

my $dbh = DBI->connect("dbi:Pg:dbname=$database;port=$pgport","","", { RaiseError => 1, AutoCommit => 1});
my $sth = $dbh->prepare("select A.id,A.sn,A.ktrans,A.dn,C.modtime as tm,C.se1 as t1,C.se2 as t2 from counters A inner join status C on A.id=C.cid where A.active=1 and A.subscr=1".($cid ? " AND A.id=$cid":""));
my $log = $dbh->prepare("INSERT INTO feed_log (auth,cid,dn,target,msg,status,err,posted,parts,cost) VALUES (?,?,?,?,?,?,?,now(),?,?)");

$sth->execute();
my $ghldap = new GHPowerLDAP;
my $ghpower = new GHPower($dbh);
my $T = $ghpower->tariff();	# Текущий тариф
while(my $r = $sth->fetchrow_hashref) {
	my $status = 1;	# 0-ok, 1-отправлено, 2 - нет адреса (target)
	my $err = '';
	my ($street_name,$domain);
	if($r->{dn} &&  ($r->{dn} =~ m/ou=([^,]+),\s*ou=([^,]+)/)) {    # Можно получить дополнительную информацию в LDAP
		$domain = $1;
		$street_name = $2;
	}
	my $Dom = $ghldap->get_Domain($r->{dn});
	my $subj = $SUBJ;
	my $body = $BODY;
	my $addr = "$street_name, $domain";
	my $date = Now(UTime($r->{tm}));
	my ($balance,$se1,$se2,$t_mode) = $ghpower->get_balance($r->{id});
	map { $_=sprintf("%0.2f",$_); s/\./,/; } ($se1,$se2);
	my $warn = '';
	my $balance_p = sprintf("%0.2f", $balance);
	$balance_p =~ s/\./,/;
	if($balance < 0) {
		$warn = $WARN;
		my $alert = (abs($balance) > $BALANCE_ALERT) ? $ALERT : '';
		$warn =~ s/\{BALANCE\}/$balance_p/;
		$warn =~ s/\{ALERT\}/$alert/;
	}
	map { $_ =~ s/\{T1\}/$se1/; $_ =~ s/\{T2\}/$se2/; $_ =~ s/\{ADDR\}/$addr/; $_ =~ s/\{DATE\}/$date/; $_ =~ s/\{BALANCE\}/$balance_p/; $_ =~ s/\{WARN\}/$warn/; $_ =~ s/\{SN\}/$r->{sn}/; } ($subj,$body);
	my $KTRANS = ($r->{ktrans} > 1) ? "(коэффициент преобразования $r->{ktrans})":"";
	$body =~ s/\{KTRANS\}/$KTRANS/;
	my $tartext;
	print "Mode: $t_mode\n"	if($verb);
	if($t_mode eq '1')	{
		$tartext = $T->{C}->{t0};
		$tartext =~ s/\./,/;
		$tartext .= " руб.\/кВт*час";
	} else {
		map { s/\./,/; } ($T->{C}->{t1},$T->{C}->{t2});
		$tartext = "\nT1 - ".$T->{C}->{t1}." руб.\/кВт*час\nT2 - ".$T->{C}->{t2}." руб.\/кВт*час";
	}
	$body =~ s/\{TARIFF\}/$tartext/;
	# Куда слать
	my @emails;
	if($Dom) {
		# Сначала ищем среди управляющих
		foreach my $manager (sort { $a->{cn} cmp $b->{cn} } @{$Dom->{managers}}) {
			foreach(sort { $a cmp $b } ref $manager->{mail} eq 'ARRAY' ? @{$manager->{mail}} : ($manager->{mail} || ())) {
				push @emails, $_;
			}
		}
		# Если нет адресов, то смотрим владельцев
		unless(@emails) {
			foreach my $owner (sort { $a->{cn} cmp $b->{cn} } @{$Dom->{owners}}) {
                        	foreach(sort { $a cmp $b } ref $owner->{mail} eq 'ARRAY' ? @{$owner->{mail}} : ($owner->{mail} || ())) {
                                	push @emails, $_;
                       	 	}
                	}
		}
	}
	# Есть куда слать :)
	if(@emails) {
		if($verb) {
			print join(",",@emails)."\n";
			print "Subj: $subj\n";
			print "Body: $body\n";
			print "In fact a message was not sent (verbose mode).\n";
		} else {	# вот тут письмо и отправим
			SendMail("GHPower",join(",",@emails),$subj,$body,{charset=>'utf8'});
		}


	} else {
		# Не удалось найти адреса
		if($verb) {
			print "Unable to find any e-mail addresses\n";
			print "Subj: $subj\n";
                        print "Body: $body\n";
		}
		# Сообщение об ошибке - в лог
		print "Unable to find any e-mail addresses: $addr\n";
		$status = 2;
	}
	$log->execute(0,$r->{id},$r->{dn},join(",",@emails),"$subj\n$body",$status,$err,1,0)	unless($verb);
}
$sth->finish;
$dbh->disconnect;
